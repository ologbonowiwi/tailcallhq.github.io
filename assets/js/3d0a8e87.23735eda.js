"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8902],{4275:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>u,toc:()=>d});var r=n(5893),a=n(1151),s=n(4866),o=n(5162);const i={title:"Configuration",sidebar_position:2},l=void 0,u={id:"getting_started/configuration",title:"Configuration",description:"For our first example, we are going to compose a GraphQL schema from the REST APIs at https://jsonplaceholder.typicode.com, a free online REST API with some fake data.",source:"@site/docs/getting_started/configuration.mdx",sourceDirName:"getting_started",slug:"/getting_started/configuration",permalink:"/docs/getting_started/configuration",draft:!1,unlisted:!1,editUrl:"https://github.com/tailcallhq/tailcallhq.github.io/tree/develop/docs/getting_started/configuration.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Configuration",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/"},next:{title:"Installation",permalink:"/docs/getting_started"}},c={},d=[];function p(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["For our first example, we are going to compose a GraphQL schema from the REST APIs at ",(0,r.jsx)("a",{href:"https://jsonplaceholder.typicode.com",target:"_blank",children:(0,r.jsx)(t.a,{href:"https://jsonplaceholder.typicode.com",children:"https://jsonplaceholder.typicode.com"})}),", a free online REST API with some fake data.\nWe will use the API at ",(0,r.jsx)(t.code,{children:"/users"})," to get a list of users, and ",(0,r.jsx)(t.code,{children:"/users/:id/posts"})," to get the posts for each user, and compose them into a single GraphQL schema."]}),"\n",(0,r.jsxs)(t.p,{children:["We can use the following formats to define our GraphQL schema: ",(0,r.jsx)(t.code,{children:".graphql"}),", ",(0,r.jsx)(t.code,{children:".yml"}),", ",(0,r.jsx)(t.code,{children:".json"}),"."]}),"\n",(0,r.jsx)(t.p,{children:"Create one of the following files and paste the contents into it."}),"\n",(0,r.jsxs)(s.Z,{children:[(0,r.jsx)(o.Z,{value:"graphql",label:"graphql",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-graphql",metastring:"showLineNumbers",children:'schema\n  # Specify server configuration: Start tailcall server at 0.0.0.0:8000 and enable GraphiQL playground\n  @server(port: 8000, graphiql: true)\n  # Specify a base url for all http requests\n  @upstream(baseURL: "http://jsonplaceholder.typicode.com") {\n  query: Query\n}\n\ntype Query {\n\n# Specify the http path for the users query\n\nusers: [User] @http(path: "/users")\n}\n\n# Create a user type with the fields returned by the users api\n\ntype User {\nid: Int!\nname: String!\nusername: String!\nemail: String!\n\n# Extend the user type with the posts field\n\n# Use the current user\'s id to construct the path\n\nposts: [Post] @http(path: "/users/{{value.id}}/posts")\n}\n\n# Create a post type with the fields returned by the posts api\n\ntype Post {\nid: Int!\ntitle: String!\nbody: String!\n}\n\n'})})}),(0,r.jsxs)(o.Z,{value:"yml",label:"yml",children:[(0,r.jsx)(t.p,{children:(0,r.jsx)(t.code,{children:"jsonplaceholder.yml"})}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yml",metastring:"showLineNumbers",children:'server:\n  port: 8000\n  graphiql: true\n  queryValidation: false\n  hostname: "0.0.0.0"\nupstream:\n  baseURL: "http://jsonplaceholder.typicode.com"\n  httpCache: true\nschema:\n  query: Query\ntypes:\n  Post:\n    fields:\n      body:\n        type: String\n        required: true\n      id:\n        type: Int\n        required: true\n      title:\n        type: String\n        required: true\n      user:\n        type: User\n        http:\n          path: /users/{{value.userId}}\n      userId:\n        type: Int\n        required: true\n  Query:\n    fields:\n      posts:\n        type: Post\n        list: true\n        http:\n          path: /posts\n  User:\n    fields:\n      email:\n        type: String\n        required: true\n      id:\n        type: Int\n        required: true\n      name:\n        type: String\n        required: true\n      phone:\n        type: String\n      username:\n        type: String\n        required: true\n      website:\n        type: String\n'})})]}),(0,r.jsxs)(o.Z,{value:"json",label:"json",children:[(0,r.jsx)(t.p,{children:(0,r.jsx)(t.code,{children:"jsonplaceholder.json"})}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",metastring:"showLineNumbers",children:'{\n  "server": {\n    "port": 8000,\n    "graphiql": true,\n    "queryValidation": false,\n    "hostname": "0.0.0.0"\n  },\n  "upstream": {\n    "baseURL": "http://jsonplaceholder.typicode.com",\n    "httpCache": true\n  },\n  "schema": {\n    "query": "Query"\n  },\n  "types": {\n    "Post": {\n      "fields": {\n        "body": {\n          "type": "String",\n          "required": true\n        },\n        "id": {\n          "type": "Int",\n          "required": true\n        },\n        "title": {\n          "type": "String",\n          "required": true\n        },\n        "user": {\n          "type": "User",\n          "http": {\n            "path": "/users/{{value.userId}}"\n          }\n        },\n        "userId": {\n          "type": "Int",\n          "required": true\n        }\n      }\n    },\n    "Query": {\n      "fields": {\n        "posts": {\n          "type": "Post",\n          "list": true,\n          "http": {\n            "path": "/posts"\n          }\n        }\n      }\n    },\n    "User": {\n      "fields": {\n        "email": {\n          "type": "String",\n          "required": true\n        },\n        "id": {\n          "type": "Int",\n          "required": true\n        },\n        "name": {\n          "type": "String",\n          "required": true\n        },\n        "phone": {\n          "type": "String"\n        },\n        "username": {\n          "type": "String",\n          "required": true\n        },\n        "website": {\n          "type": "String"\n        }\n      }\n    }\n  }\n}\n'})})]})]}),"\n",(0,r.jsxs)(t.p,{children:["The above file is a standard ",(0,r.jsx)(t.code,{children:".graphQL"})," file, with some minor additions such as ",(0,r.jsx)(t.code,{children:"@upstream"})," and ",(0,r.jsx)(t.code,{children:"@http"})," directives. Basically we specify the GraphQL schema and how to resolve that GraphQL schema in the same file, without having to write any code!"]})]})}function h(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},5162:(e,t,n)=>{n.d(t,{Z:()=>o});n(7294);var r=n(512);const a={tabItem:"tabItem_Ymn6"};var s=n(5893);function o(e){let{children:t,hidden:n,className:o}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.Z)(a.tabItem,o),hidden:n,children:t})}},4866:(e,t,n)=>{n.d(t,{Z:()=>w});var r=n(7294),a=n(512),s=n(2466),o=n(6550),i=n(469),l=n(1980),u=n(7392),c=n(12);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function h(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const a=(0,o.k6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l._X)(s),(0,r.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(a.location.search);t.set(s,e),a.replace({...a.location,search:t.toString()})}),[s,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,s=p(e),[o,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:s}))),[u,d]=m({queryString:n,groupId:a}),[f,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,s]=(0,c.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:a}),y=(()=>{const e=u??f;return h({value:e,tabValues:s})?e:null})();(0,i.Z)((()=>{y&&l(y)}),[y]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),g(e)}),[d,g,s]),tabValues:s}}var g=n(2389);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=n(5893);function v(e){let{className:t,block:n,selectedValue:r,selectValue:o,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:u}=(0,s.o5)(),c=e=>{const t=e.currentTarget,n=l.indexOf(t),a=i[n].value;a!==r&&(u(t),o(a))},d=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":n},t),children:i.map((e=>{let{value:t,label:n,attributes:s}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,ref:e=>l.push(e),onKeyDown:d,onClick:c,...s,className:(0,a.Z)("tabs__item",y.tabItem,s?.className,{"tabs__item--active":r===t}),children:n??t},t)}))})}function j(e){let{lazy:t,children:n,selectedValue:a}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:s.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a})))})}function x(e){const t=f(e);return(0,b.jsxs)("div",{className:(0,a.Z)("tabs-container",y.tabList),children:[(0,b.jsx)(v,{...e,...t}),(0,b.jsx)(j,{...e,...t})]})}function w(e){const t=(0,g.Z)();return(0,b.jsx)(x,{...e,children:d(e.children)},String(t))}},1151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>o});var r=n(7294);const a={},s=r.createContext(a);function o(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);