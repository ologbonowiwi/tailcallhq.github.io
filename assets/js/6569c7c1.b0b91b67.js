"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8637],{5429:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var n=r(5893),t=r(1151);const i={title:"@grpc"},a=void 0,o={id:"operators/grpc",title:"@grpc",description:"The @grpc directive enables the resolution of GraphQL fields via gRPC services. Below is an illustrative example of how to apply this directive within a GraphQL schema:",source:"@site/docs/operators/grpc.md",sourceDirName:"operators",slug:"/operators/grpc",permalink:"/docs/operators/grpc",draft:!1,unlisted:!1,editUrl:"https://github.com/tailcallhq/tailcallhq.github.io/tree/develop/docs/operators/grpc.md",tags:[],version:"current",frontMatter:{title:"@grpc"},sidebar:"tutorialSidebar",previous:{title:"@graphQL",permalink:"/docs/operators/graphql"},next:{title:"@http",permalink:"/docs/operators/http"}},c={},l=[{value:"method",id:"method",level:2},{value:"baseURL",id:"baseurl",level:2},{value:"body",id:"body",level:2},{value:"headers",id:"headers",level:2},{value:"batchKey",id:"batchkey",level:2}];function d(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.code,{children:"@grpc"})," directive enables the resolution of GraphQL fields via gRPC services. Below is an illustrative example of how to apply this directive within a GraphQL schema:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-graphql",children:'schema @link(src: "./users.proto", type: Protobuf) {\n  query: Query\n}\n\ntype Query {\n  users: [User] @grpc(method: "users.UserService.ListUsers")\n}\n'})}),"\n",(0,n.jsxs)(s.p,{children:["This schema snippet demonstrates the directive's application, where a query for ",(0,n.jsx)(s.code,{children:"users"})," triggers a gRPC request to the ",(0,n.jsx)(s.code,{children:"UserService"}),"'s ",(0,n.jsx)(s.code,{children:"ListUsers"})," method, thereby fetching the user data."]}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.code,{children:".proto"})," file delineates the structure and methods of the gRPC service. A simplified example of such a file is as follows:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-proto",children:'syntax = "proto3";\n\npackage users;\n\nservice UserService {\n  rpc ListUsers (UserListRequest) returns (UserListReply) {}\n  rpc GetUser (UserGetRequest) returns (UserGetReply) {}\n}\n\nmessage UserListRequest {\n  // Definitions of request parameters\n}\n\nmessage UserListReply {\n  // Structure of the reply\n}\n\nmessage UserGetRequest {\n  // Definitions of request parameters\n}\n\nmessage UserGetReply {\n  // Structure of the reply\n}\n'})}),"\n",(0,n.jsx)(s.admonition,{type:"important",children:(0,n.jsx)(s.p,{children:"It is mandatory to have a package name in a protobuf file."})}),"\n",(0,n.jsxs)(s.p,{children:["Linking this file within a GraphQL schema is facilitated by the ",(0,n.jsx)(s.code,{children:"@link"})," directive, as shown below:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-graphql",children:'schema @link(src: "./users.proto", type: Protobuf) {\n  query: Query\n}\n'})}),"\n",(0,n.jsxs)(s.p,{children:["Tailcall automatically resolves the protobuf file for any methods referenced in the ",(0,n.jsx)(s.code,{children:"@grpc"})," directive."]}),"\n",(0,n.jsx)(s.h2,{id:"method",children:"method"}),"\n",(0,n.jsxs)(s.p,{children:["This parameter specifies the gRPC service and method to be invoked, formatted as ",(0,n.jsx)(s.code,{children:"<package>.<service>.<method>"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-graphql",children:'type Query {\n  users: [User]\n    @grpc(method: "proto.users.UserService.ListUsers")\n}\n'})}),"\n",(0,n.jsx)(s.h2,{id:"baseurl",children:"baseURL"}),"\n",(0,n.jsxs)(s.p,{children:["Defines the base URL for the gRPC API. If not specified, the URL set in the ",(0,n.jsx)(s.code,{children:"@upstream"})," directive is used by default:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-graphql",children:'type Query {\n  users: [User]\n    @grpc(\n      baseURL: "https://grpc-server.example.com"\n      method: "proto.users.UserService.ListUsers"\n    )\n}\n'})}),"\n",(0,n.jsx)(s.h2,{id:"body",children:"body"}),"\n",(0,n.jsx)(s.p,{children:"This parameter outlines the arguments for the gRPC call, allowing for both static and dynamic inputs:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-graphql",children:'type UserInput {\n  id: ID\n}\n\ntype Query {\n  user(id: UserInput!): User\n    @grpc(\n      body: "{{args.id}}"\n      method: "proto.users.UserService.GetUser"\n    )\n}\n'})}),"\n",(0,n.jsx)(s.h2,{id:"headers",children:"headers"}),"\n",(0,n.jsx)(s.p,{children:"Custom headers for the gRPC request can be defined, facilitating the transmission of authentication tokens or other contextual data:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-graphql",children:'type Query {\n  users: [User]\n    @grpc(\n      headers: [\n        {key: "X-CUSTOM-HEADER", value: "custom-value"}\n      ]\n      method: "proto.users.UserService.ListUsers"\n    )\n}\n'})}),"\n",(0,n.jsx)(s.h2,{id:"batchkey",children:"batchKey"}),"\n",(0,n.jsx)(s.p,{children:"This argument is employed to optimize batch requests by grouping them based on specified response keys, enhancing performance in scenarios requiring multiple, similar requests:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-graphql",children:'type Query {\n  users(id: UserInput!): [User]\n    @grpc(\n      batchKey: ["id"]\n      method: "proto.users.UserService.ListUsers"\n      baseURL: "https://grpc-server.example.com"\n    )\n}\n'})}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsxs)(s.p,{children:["Read about ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"/docs/guides/n+1/",children:"n + 1"})})," to learn how to use the ",(0,n.jsx)(s.code,{children:"batchKey"})," setting."]})})]})}function h(e={}){const{wrapper:s}={...(0,t.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1151:(e,s,r)=>{r.d(s,{Z:()=>o,a:()=>a});var n=r(7294);const t={},i=n.createContext(t);function a(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);